Sequence:
SELECT *
  FROM user_sequences
 WHERE sequence_name = '<sequence_name>';

++++++++++++++++++++++++++++
Finding No of columns in the table
+++++++++++++++++++++++++++
select count(*) from user_tab_columns where table_name = 'xxxx';

+++++++++++++++++++++++++++++++++++++=
Find the type and length of the column in the table
+++++++++++++++++++++++++++++++++++
select data_type,data_length from all_tab_columns 
where table_name='UUU' and column_name='UUU';

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Check whether the colum exist in the table
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Select count(*) 
    from user_tab_cols
    where column_name = 'X_DEAL_NAME'
      and table_name = 'BIZ_DP_DEAL_MASTER';

+++++++++++++++++++++++++++
Grant:
+++++++++++++++++++++++++++++++
GRANT SELECT ON table_name TO schema_name;

++++++++++++++++++++++++++++++++++++++
Synonym:
+++++++++++++++++++++++++++++++++++++++
CREATE OR REPLACE SYNONYM "OCCSS_DTS_DEV_04"."D_DEAL_ENTITLEMENTS" FOR "OCCSS_ENTMT_DEV_04"."D_DEAL_ENTITLEMENTS";

++++++++++++++++++++++++++++++++++++++++++++++++++
PLSQL
+++++++++++++++++++++++++++++++++++++++++++++++++++
select count(*) from (select 
  min(ce.id_obj)
from biz_dp_deal_master DM 
 inner join biz_dp_master MS
   on (MS.ID_OBJ = DM.ID_OBJ_MSTR 
   and DM.X_TXN_ID = MS.X_LATEST_TXN_ID
   AND DM.X_TXN_TYP  IN ('0001','0002'))
inner join biz_DP_CLIENT_DEAL_EXECUTION CE
   on (CE.id_obj_mstr=DM.id_obj_mstr
      and ce.x_type='Y') 
inner join biz_dp_child ch
   ON(CE.ID_OBJ_MSTR = CH.ID_OBJ_MSTR 
   AND CH.X_LATEST_TXN_ID = CE.X_TXN_ID 
   AND CE.ID_OBJ_CHILD = CH.ID_OBJ
   AND CE.x_txn_typ <> '0003')
group by ce.id_obj_mstr having count(ce.id_obj_mstr)>1);

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++==

select count(*) from(select min(be.id_obj) from biz_DP_CLIENT_DEAL_EXECUTION be
         inner join biz_dp_child ch
         --on be.id_obj_mstr='20170422100644052'
         on be.id_obj_mstr=ch.id_obj_mstr
         and be.id_obj_child = ch.id_obj
         and be.x_txn_typ <> '0003'
         and be.x_txn_id = ch.x_latest_txn_id
         and be.x_type = 'Y'
        group by be.id_obj_mstr having count(be.id_obj_mstr)>1); 
        
        
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Trigger:
create or replace TRIGGER TRG_RMWB_DP_FEE_TYPE_AUDIT
  AFTER INSERT OR UPDATE ON RMWB_DP_FEE_TYPE
    FOR EACH ROW
       DECLARE v_rmwb_action VARCHAR2(20);
BEGIN
    IF UPDATING AND :NEW.IS_DELETE = 'N' THEN
        v_rmwb_action :='UPDATE';
    ELSIF INSERTING THEN
        v_rmwb_action :='ADD';
    END IF;

    IF :NEW.IS_DELETE = 'Y' THEN
        v_rmwb_action :='DELETE';
    END IF;

	INSERT INTO RMWB_DP_FEE_TYPE_AUDIT VALUES(
	  RMWB_DP_FEE_TYPE_AUDIT_SEQ.NEXTVAL,
	 :NEW.PERIODIC_FEE_ID,
	 :NEW.PERIODIC_FEE_TYPE,
	 :OLD.PERIODIC_FEE_TYPE,
	 :NEW.PERIODIC_FEE_GROUP,
	 :OLD.PERIODIC_FEE_GROUP,
     :NEW.IS_ACTIVE,
     :OLD.IS_ACTIVE,
     :NEW.UPDATED_BY,
     CURRENT_TIMESTAMP,
     V_RMWB_ACTION
	);

END;
+++++++++++++++++
SQL Indexes:
++++++++++++++++++++++
1)CREATE INDEX IDX_DPDM_DL_NAME ON xxx(column_name) INDEXTYPE IS CTXSYS.CONTEXT PARAMETERS ('SYNC ( ON COMMIT)');
2)drop index IDX_DPDM_DL_NAME;
3)alter INDEX IDX_DPDM_DL_NAME rebuild online;
        
